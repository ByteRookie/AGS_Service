alias: AGS Automation
description: Automation that is required in order to make AGS Service function
trigger:
  - platform: state
    entity_id:
      - media_player.ags_media_system
    attribute: active_speakers
  - platform: state
    entity_id:
      - media_player.ags_media_system
    to: none
    attribute: primary_speaker
condition: []
action:
  - choose:
      - conditions:
          - condition: state
            entity_id: media_player.ags_media_system
            state: none
            enabled: true
            attribute: primary_speaker
          - condition: state
            entity_id: media_player.ags_media_system
            state: ON TV
            attribute: ags_status
        sequence:
          - service: media_player.select_source
            data:
              source: TV
            target:
              entity_id: >-
                {{ state_attr('media_player.ags_media_system',
                'preferred_primary_speaker' ) }}
      - conditions:
          - condition: state
            entity_id: media_player.ags_media_system
            state: none
            attribute: primary_speaker
        sequence:
          - service: media_player.play_media
            target:
              entity_id: >-
                {{ state_attr('media_player.ags_media_system',
                'preferred_primary_speaker' ) }}
            data:
              media_content_id: >-
                FV:{{ state_attr('media_player.ags_media_system', 'ags_source' )
                }}
              media_content_type: favorite_item_id
          - wait_template: >-
              {{ not(state_attr('media_player.ags_media_system',
              'primary_speaker' ) == "none") }}
            continue_on_timeout: true
            enabled: false
    default: []
    alias: Select Source Matrix
  - if:
      - condition: not
        conditions:
          - condition: state
            entity_id: media_player.ags_media_system
            state: "[]"
            attribute: active_speakers
          - condition: state
            entity_id: media_player.ags_media_system
            state: "off"
            attribute: ags_status
          - condition: state
            entity_id: media_player.ags_media_system
            state: none
            attribute: primary_speaker
          - condition: state
            entity_id: media_player.ags_media_system
            state: "Not available"
            attribute: active_speakers
          - condition: state
            entity_id: media_player.ags_media_system
            state: "Not available"
            attribute: ags_status
          - condition: state
            entity_id: media_player.ags_media_system
            state: "Not available"
            attribute: primary_speaker            
    then:
      - service: media_player.join
        data:
          entity_id: "{{ state_attr('media_player.ags_media_system', 'primary_speaker' ) }}"
          group_members: >-
            {{ state_attr('media_player.ags_media_system', 'active_speakers' ) }}
      - delay: '00:00:02'
    else: null
    alias: Join Action
  - if:
      - condition: not
        conditions:
          - condition: state
            entity_id: media_player.ags_media_system
            state: "[]"
            attribute: inactive_speakers
          - condition: state
            entity_id: media_player.ags_media_system
            state: "Not available"
            attribute: inactive_speakers
    then:
      - service: media_player.unjoin
        data: {}
        target:
          entity_id: >-
            {{ state_attr('media_player.ags_media_system', 'inactive_speakers' )
            }}
      - service: media_player.media_pause
        data: {}
        target:
          entity_id: >-
            {{ state_attr('media_player.ags_media_system', 'inactive_speakers' )
            }}
      - service: media_player.clear_playlist
        data: {}
        target:
          entity_id: >-
            {{ state_attr('media_player.ags_media_system', 'inactive_speakers' )
            }}
    else: null
    alias: Remove Action
    enabled: true
  - if:
      - condition: not
        conditions:
          - condition: state
            entity_id: media_player.ags_media_system
            state: "[]"
            attribute: ags_inactive_tv_speakers
          - condition: state
            entity_id: media_player.ags_media_system
            state: "Not available"
            attribute: ags_inactive_tv_speakers          
    then:
      - service: media_player.select_source
        data:
          source: TV
        target:
          entity_id: >-
            {{ state_attr('media_player.ags_media_system',
            'ags_inactive_tv_speakers' )}}
    alias: Reset TV Speakers to TV after
mode: restart
